import{_ as a,r as s,o as r,c as l,a as n,b as e,d as t,e as i}from"./app.29bc771a.js";const d={},c=i(`<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><h2 id="installing" tabindex="-1"><a class="header-anchor" href="#installing" aria-hidden="true">#</a> Installing</h2><p>Devon is distributed as a NodeJS-based CLI through npm. You can install it locally, but it&#39;s easier to work with when installed globally:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> @evilkiwi/devon

<span class="token comment"># or</span>

<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @evilkiwi/devon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Devon is <strong>not meant for production environments</strong> - it exists purely to make local development easier.</p></div><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>Devon has a couple requirements for running different aspects of the CLI. Whether you install the optional ones or not is up to you.</p>`,7),u=n("strong",null,"[required]",-1),h={href:"https://www.docker.com/products/docker-desktop",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/FiloSottile/mkcert#installation",target:"_blank",rel:"noopener noreferrer"},m=i('<h2 id="initializing-a-monorepo" tabindex="-1"><a class="header-anchor" href="#initializing-a-monorepo" aria-hidden="true">#</a> Initializing a Monorepo</h2><p>Devon is built to be added to existing Monorepos - so make sure you set up yours via Yarn workspaces/Lerna/etc. before initializing Devon.</p><p>Using the <code>devon init</code> command at the root-level of your Monorepo, you&#39;ll be taken through a list of options to bootstrap your new Devon set-up.</p><p>This includes things like:</p><ul><li>Naming your Project</li><li>Choosing existing services to bootstrap</li><li>Optionally add some additional services, such as MySQL, Redis or an NGINX Proxy</li></ul><p>Once you&#39;re done initializing Devon in your monorepo, you&#39;re good to go!</p><h2 id="starting-your-environment" tabindex="-1"><a class="header-anchor" href="#starting-your-environment" aria-hidden="true">#</a> Starting your Environment</h2><p>The one command you&#39;ll likely use 90% of the time is <code>devon switch</code>. This command will let you pick which services you&#39;d like to work on, which environment you want them to use, and then compile the relevant Docker Compose and start the containers.</p><p>At this point you&#39;re all set - you can use <code>devon help</code> for a list of commands and their usage, or check out our predefined recipes.</p>',9);function v(g,k){const o=s("ExternalLinkIcon");return r(),l("div",null,[c,n("ul",null,[n("li",null,[e("Docker "),u,e(" - Devon uses Docker to run the virtualized environment. "),n("a",h,[e("Download Docker here"),t(o)]),e(".")]),n("li",null,[e("mkcert - If you want to use the SSL Automation provided by Devon, you need to install this. "),n("a",p,[e("Installation instructions here"),t(o)]),e(".")])]),m])}const b=a(d,[["render",v],["__file","getting-started.html.vue"]]);export{b as default};
